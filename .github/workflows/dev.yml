name: Dev CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      BACKEND_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend-app
      FRONTEND_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend unit tests
        working-directory: backend
        run: |
          PYTHONPATH=. pytest

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend dev server in background
        working-directory: frontend
        run: |
          npm run build
          npm run start &
          sleep 10

      - name: Run Cypress tests
        working-directory: frontend
        run: npx cypress run


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push backend image
        working-directory: backend
        run: |
          docker build -t $BACKEND_IMAGE:${{ github.sha }} .
          docker push $BACKEND_IMAGE:${{ github.sha }}

      - name: Build and push frontend image
        working-directory: frontend
        run: |
          docker build -t $FRONTEND_IMAGE:${{ github.sha }} .
          docker push $FRONTEND_IMAGE:${{ github.sha }}

